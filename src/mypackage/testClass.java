package mypackage;

import java.util.*;

/**
 * Created by Alex on 2/2/2018.
 */
public class testClass { //название класса должно совпадать с названием внутри package и начинаться с маленькой буквы

    public static void main(String[] args) { // этот метод обязателен, является точкой входа в программу

        //SET КОЛЕКЦИЯ

        //Краткое описание разницы между колекциями Lisa and Set
        /*

╔═══════════════════╦══════════════════════╦═════════════════════════════╗
║                   ║         List         ║            Set              ║
║     Duplicates    ║          YES         ║            NO               ║
╠═══════════════════╬══════════════════════╬═════════════════════════════╣
║       Order       ║       ORDERED        ║  DEPENDS ON IMPLEMENTATION  ║
╠═══════════════════╬══════════════════════╬═════════════════════════════╣
║ Positional Access ║         YES          ║            NO               ║
╚═══════════════════╩══════════════════════╩═════════════════════════════╝
        List

        Является упорядоченной группировкой элементов.
        Список используется для сбора элементов с дубликатами.
        Новые методы определены внутри списка интерфейс.

        Set

        Является неупорядоченной группировкой элементов.
        Set используется для сбора элементов без дубликатов.
        Внутри интерфейса Set не определены новые методы, поэтому мы должны использовать методы интерфейса Collection только с помощью подклассов Set.

        Упорядоченные списки элементов (уникальные или нет)

            Соответствует интерфейсу Java с именем List
            Доступ к ним можно получить по индексу

            с использованием

            LinkedList
            ArrayList
            Списки уникальных элементов:
            Соответствует интерфейсу Java с именем Set
            Невозможно получить не по индексу

            с использованием

            HashSet (неупорядоченный)
            LinkedHashSet (заказывается)
            TreeSet (отсортированный по естественному порядку или предоставленным компаратором)
            Оба интерфейса Set и List соответствуют интерфейсу Java с именем Collection
        */

        Set<Integer> firstSet = new HashSet<>();//создаем новый Set через самую популярную реализацию(HashSet)
        firstSet.add(10);// добавили елемент 10 через метод .add
        firstSet.add(11);
        firstSet.add(11);//значение 11 не запишется в сет (оно не уникальное)
        firstSet.add(13);
        firstSet.add(14);
        System.out.println(firstSet);//выведет только УНИКАЛЬНЫЕ значения(не уникальные даже не попадут в сет)

        firstSet.size();//.size показывает размер сета
        System.out.println(firstSet.size());
        System.out.println("------------------------------------------------------------------");

        //Попробуем работать c Set через итератор(интерфейс). Плюс, используем циклы

        Iterator<Integer> iteratorSet = firstSet.iterator();
        while (iteratorSet.hasNext()) {
            System.out.println(iteratorSet.next());// выведет на екран все уникальные значения сета (10,11,13,14)
        }
        System.out.println("------------------------------------------------------------------");

        for (int i : firstSet){
            System.out.println(i);//выведет на екран все уникальные значения сета (10,11,13,14)
        }
        firstSet.remove(14);//с помощью метода .remove удаляем значение, указываем не индекс(как в list),а само
        //значение которое нужно удалить
        System.out.println(firstSet);//вывод 10,11,13 (14 был удален)
        System.out.println("------------------------------------------------------------------");

        /*firstSet.clear();// .clear удаляет все значения с сета
        System.out.println(firstSet);
        System.out.println(firstSet.size());
        System.out.println("------------------------------------------------------------------");*/

        System.out.println(firstSet.contains(10));// true - потому что значение 10 есть в сете
        System.out.println(firstSet.contains(14));// false - потому что значение 14 есть в сете

        //Примечание! метод .get отсутствует в Set потому, что в Set нет индексов(только уникальные значения)

        System.out.println("------------------------------------------------------------------");
    }




}

