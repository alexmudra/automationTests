package mypackage;

import java.util.*;

//ИЗУЧАЕМ ИНТЕРФЕЙСЫ



/*Общее определение: Интерфейс — это совокупность методов и правил взаимодействия элементов системы.
Другими словами, интерфейс определяет как элементы будут взаимодействовать между собой.

Интерфейс двери — наличие ручки;
Интерфейс автомобиля — наличие руля, педалей, рычага коробки передач;
Интерфейс дискового телефона — трубка + дисковый набиратель номера.
Когда вы используете эти "объекты", вы уверены в том, что вы сможете использовать их подобным образом. Благодаря тому, что вы знакомы с их интерфейсом.

В программировании что-то похожее. Почему графическую часть программы часто называют интерфейсом? Потому, что она определяет каким образом вы сможете использовать основной функционал, заложенный в программе.

"Интерфейс определяет каким образом мы можем использовать объект" - перенесем эту мысль в плоскость программирования.
В отличии от наследования класса, мы можем реализовать несколько интерфейсов
*/

public class testClass{

    public static void main(String[] args){

       CarSecond car = new CarSecond();//создали объект класса CarSecond
       Plane plane = new Plane();// Создали объект класса Plane

        car.go();//использовали метод дочернего класса CarSecond (а родительский для них интерфейс Transport)
        car.stop();//использовали метод дочернего класса CarSecond (а родительский для них интерфейс Transport)

        plane.go();//использовали/вызвали метод класса Plane
        plane.stop();//использовали/вызвали метод класса Plane
        plane.setSpeed(500);





    }

    static void codeDeviderLine(){
            System.out.println("---------------------------------" + " End Code " + "-----------------------------------");
        }

        }








