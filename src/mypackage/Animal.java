package mypackage;

import javax.sound.midi.Soundbank;

/**
 * Created by Alex on 2/17/2018.
 */

//НАСЛЕДОВАНИЕ В JAVA
    /*
    При использовании наследования вы говорите: Этот новый класс похож на тот старый класс.
    В коде это пишется как extends, после которого указываете имя базового класса.
    Тем самым вы получаете доступ ко всем полям и методам базового класса.
    Используя наследование, можно создать общий класс, которые определяет характеристики, общие для набора связанных элементов.

    Затем вы можете наследоваться от него и создать новый класс, который будет иметь свои уникальные характеристики.
    Главный наследуемый класс в Java называют суперклассом. Наследующий класс называют подклассом.
    Получается, что подкласс - это специализированная версия суперкласса, которая наследует все члены суперкласса и добавляет
     свои собственные уникальные элементы. К примеру, в Android есть класс View и подкласс TextView.
     Чтобы наследовать класс, достаточно вставить имя наследуемого класса с использованием ключевого слова extends:

        public class MainActivity extends Activity {

}
Доступ к переменным  с модификатором доступа privatе возможен через создание геттеров и сетером (alt +insert)
*/

public class Animal { // создадим новый родительский сласс
    String name; //объявим общие переменные для класса
    String color;

    public int var;// создадим переменную для експерементов из Инкапсуляцией


    public void walk(String place){ //создадим метод walk который будет общим для всех классов родительского класса
        // в (String place) мы передадим место где будем представители класса Animal будут гулять
        System.out.println("We're walking in "+ place); // выведем место где планируем гулять
    }
    public  void sleep (){ // создадим общий метод sleep.Этот метод будет общим для всех представителей и наследников
        // класса Animal
        System.out.println("I'm sleeping");
    }

    static void codeDeviderLine(){
        System.out.println("---------------------------------" + " End Code " + "-----------------------------------");
    }
}
